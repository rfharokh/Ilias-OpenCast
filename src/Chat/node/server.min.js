const yargs=require("yargs"),argv=yargs.option("client-id",{description:"ILIAS Client ID",alias:"c",type:"string"}).option("ilias-dir",{description:"root dir of this ILIAS installation",alias:"d",type:"string",default:"/var/www/ilias"}).option("port",{description:"port which the chat server listens to",alias:"p",type:"number",default:3e3}).option("ip",{description:"IP address which the chat server listens to",type:"string",default:"0.0.0.0"}).option("use-https",{description:"set if the node server should use ssl",type:"boolean",default:0}).option("ssl-key-path",{description:"necessary for using https",type:"string"}).option("ssl-cert-path",{description:"necessary for using https",type:"string"}).option("ssl-passphrase",{description:"passphrase for ssl key",type:"string"}).demandOption(["client-id"]).help().alias("help","h").argv,client_id=argv.clientId,ilias_installation_dir=argv.iliasDir?argv.iliasDir.replace(/\/+$/,""):"/var/www/ilias",port=argv.port,ip=argv.ip;!argv.useHttps||"string"==typeof argv.sslKeyPath&&"string"==typeof argv.sslCertPath&&"string"==typeof argv.sslPassphrase||(console.error("please define a ssl-key-path, ssl-cert-path and ssl-passphrase when using https"),process.exit(1));const protocol=argv.useHttps?"https":"http";require("console-stamp")(console,"yyyy-mm-dd HH:MM:ss.l");const fs=require("fs"),util=require("util");fs.readFile=util.promisify(fs.readFile);const ejs=require("ejs"),moment=require("moment"),index_file=fs.readFileSync(__dirname+"/templates/index.ejs","utf8"),QueryUtils=require("./modules/QueryUtils.js");QueryUtils.init(client_id,ilias_installation_dir),QueryUtils.writeChatServerConfig(ip,port,protocol);const express=require("express"),app=express();if(argv.useHttps){(async function(){return require(protocol).createServer({key:await fs.readFile(argv.sslKeyPath),cert:await fs.readFile(argv.sslCertPath),passphrase:argv.sslPassphrase},app)})().then(a=>{initServer(a)})}else initServer(require(protocol).createServer(app));function initServer(a){const b=require("socket.io")(a);app.use(express.static(__dirname+"/public")),app.get("/srchat/check_connection",function(a,b){b.status(200).end()}),app.get("/srchat/get_profile_picture/:usr_id",function(a,b){var c=ilias_installation_dir+"/data/"+client_id+"/usr_images/usr_"+a.params.usr_id+"_xsmall.jpg";try{fs.existsSync(c)?b.sendFile(c):b.sendFile(ilias_installation_dir+"/templates/default/images/no_photo_xsmall.jpg")}catch(a){console.error(a),b.sendFile(ilias_installation_dir+"/templates/default/images/no_photo_xsmall.jpg")}}),app.get("/srchat/open_chat/:token",async function(a,b){try{var c=await QueryUtils.checkAndFetchToken(a.params.token),d={token:a.params.token,client_id:client_id,base_url:protocol+"://"+a.hostname,public_name:c.public_name,usr_id:c.usr_id,chat_room_id:c.chat_room_id,messages:await QueryUtils.getOldMessages(c.chat_room_id)};return b.send(ejs.render(index_file,d))}catch(c){console.warn("check failed for token "+a.params.token+" with error message: "+c.message),b.sendFile(__dirname+"/templates/error.html")}}),b.use(async function(a,b){if("undefined"==typeof a.handshake.query||"string"!=typeof a.handshake.query.token)return console.error("missing token in handshake"),b(new Error("missing token in handshake"));try{var c=await QueryUtils.checkAndFetchToken(a.handshake.query.token)}catch(a){return console.error(a.message),b(new Error(a.message))}return a.usr_id=c.usr_id,a.chat_room_id=c.chat_room_id,a.public_name=c.public_name,b()}),b.on("connection",function(a){a.join("sr_chat_"+a.chat_room_id),a.on("disconnect",function(){}),a.on("chat_msg",function(c){var d=moment().format("HH:mm"),e=moment().format("YYYY-MM-DD HH:mm:ss");b.to("sr_chat_"+a.chat_room_id).emit("chat_msg",{public_name:a.public_name,msg:c,sent_at:d,usr_id:a.usr_id}),QueryUtils.insertMessage(a.chat_room_id,a.usr_id,c,e)})}),a.listen(port,ip,511,function(){console.log("listening on "+protocol+"://"+ip+":"+port)})}